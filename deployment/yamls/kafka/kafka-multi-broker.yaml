---
apiVersion: v1
kind: Service
metadata:
  name: kafka-broker
spec:
  ports:
  - port: 9092
  # [podname].kafka-broker.kafka.svc.cluster.local
  clusterIP: None
  selector:
    app: kafka

---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  ports:
  - port: 9092
  selector:
    app: kafka
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
spec:
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-broker
  replicas: 3
  template:
    metadata:
      annotations:
        prometheus.io/port: '7071'
        ververica.com/scrape_every_2s: 'true'
      labels:
        app: kafka
    spec:
      containers:
      - name: broker
        image: 9923/kafka_jmx:4
        resources:
          requests:
            cpu: 1000m
            memory: 4000Mi
          limits:
            cpu: 1500m
            memory: 8000Mi
#        storage:
#          type: persistent-claim
#          class: standard
#          size: 20Gi
#          delete-claim: false
        env:
        - name: HOSTNAME_VALUE
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KAFKA_LISTENERS_COMMAND
          value: "echo \"PLAINTEXT://${HOSTNAME}.kafka-broker.kafka.svc.cluster.local:9092\""
        - name: BROKER_ID_COMMAND
          value: "echo ${HOSTNAME##*-}"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: zoo1:2181
        - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
          value: "false"
        - name: KAFKA_LOG_RETENTION_MS
          value: "10000"
        - name: KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS
          value: "5000"
        # - name: KAFKA_CREATE_TOPICS
        #   value: topic:24:1  
        - name: EXTRA_ARGS 
          value: -javaagent:/usr/app/jmx_prometheus_javaagent.jar=7071:/usr/app/prom-jmx-agent-config.yml  
        ports:
        - containerPort: 9092
        - containerPort: 7071
